;;; default.el --- Useful Consts & Functions & Macros -*- lexical-binding: t; -*-

;; Copyright (C) 2023-2025 Icy-Thought

;; Author: Icy-Thought <icy-thought@pm.me>
;; Keywords: internal
;; URL: https://github.com/Icy-Thought/emacs.d/

;; :NOTE| Quick-access to built-in & Emacs pkgs from nixpkgs

(defmacro use-feature (name &rest args)
  "Similar to `use-package', but for built-in packages.
  NAME and ARGS are in `use-package'."
  (declare (indent defun))
  `(use-package ,name
     :ensure nil
     ,@args))

;; :NOTE| Determine what system Emacs is installed in

(defconst IS-DECLERATIVE?
  (and (eq system-type 'gnu/linux)
       (with-temp-buffer
         (insert-file-contents "/etc/os-release")
         (re-search-forward (rx bol "ID=" (group (| "nixos" "guix")) eol) nil t))))

;; :NOTE| Read secrets from their designaed directory

(defun irkalla/read-secret-file (filename)
  "Fetch content of secrets file generated by agenix."
  (with-temp-buffer
    (insert-file-contents (expand-file-name filename "/run/agenix"))
    (string-trim-right (buffer-string))))

;; :NOTE| Functions for easier system-clipboard access

(defun irkalla/copy-to-sysclip ()
  "Copy contents to the system clipboard."
  (interactive)
  (setopt select-enable-clipboard t)
  (if (featurep 'evil)
      (call-interactively #'evil-yank)
    (kill-ring-save (region-beginning) (region-end)))
  (setopt select-enable-clipboard nil))

(defun irkalla/paste-from-sysclip ()
  "Paste contents to the system clipboard."
  (interactive)
  (setopt select-enable-clipboard t)
  (if (featurep 'evil)
      (call-interactively #'evil-paste-after)
    (yank))
  (setopt select-enable-clipboard nil))

;; :NOTE| Time to require the modules

(require 'irkalla/custom-modes)

(provide 'irkalla/lib)
